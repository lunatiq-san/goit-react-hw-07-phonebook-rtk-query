{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.jsx","redux/contacts/contactSlice.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/Filter/Filter.jsx","App.jsx","redux/pokemon.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","addContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","ContactForm","useState","name","setName","number","setNumber","isLoading","contacts","data","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","options","find","contact","toLowerCase","alert","form","label","input","type","pattern","title","required","onChange","btn","disabled","color","height","width","loader","ContactList","list","map","id","item","onClick","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getFilter","state","filter","createSelector","items","normalizedFilter","includes","createReducer","_","payload","action","loading","combineReducers","connect","contactsSelectors","dispatch","target","App","pokemonApi","getPokemonByName","store","useGetPokemonByNameQuery","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","devtools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fa780a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1U4bw\",\"label\":\"ContactForm_label__2m9RI\",\"input\":\"ContactForm_input__1ZafN\",\"btn\":\"ContactForm_btn__1wuRH\",\"loader\":\"ContactForm_loader__27Skl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__36KFz\",\"item\":\"ContactList_item__21dsj\",\"btn\":\"ContactList_btn__2gUNv\",\"loader\":\"ContactList_loader__1qjPY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__-bIJ-\",\"input\":\"Filter_input__18PLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Fac3\"};","import styles from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactApi = createApi({\n  reducerPath: 'contactApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://612639f83ab4100017a68e1f.mockapi.io/',\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => `/contacts`,\n      providesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    addContact: builder.mutation({\n      query: newContact => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation,\n} = contactApi;\n","import { useState } from 'react';\r\nimport {\r\n  useAddContactMutation,\r\n  useFetchContactsQuery,\r\n} from 'redux/contacts/contactSlice';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [addContact, { isLoading }] = useAddContactMutation();\r\n  const { data: contacts } = useFetchContactsQuery();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const options = { name, number };\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n    } else {\r\n      addContact(options);\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        Number\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={styles.btn} type=\"submit\" disabled={isLoading}>\r\n        Add contact\r\n        {isLoading && (\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#000000\"\r\n            height={25}\r\n            width={25}\r\n            className={styles.loader}\r\n          />\r\n        )}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n} from 'redux/contacts/contactSlice';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const { data: contacts } = useFetchContactsQuery();\r\n  const [deleteContact] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <ul className={styles.list}>\r\n          {contacts &&\r\n            contacts.map(({ id, name, number }) => (\r\n              <li className={styles.item} name={name} key={id}>\r\n                {name}: {number}\r\n                <button\r\n                  className={styles.btn}\r\n                  type=\"button\"\r\n                  onClick={() => deleteContact(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = ' http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => {\n      dispatch(fetchContactsSuccess(data));\n    })\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n// dispatch функцию, которая выполняется\n// const asyncActionCreator = args => dispatch => {};\nconst addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest());\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest(id));\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getLoading, getFilter, getVisibleContacts };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, changeFilter } from 'redux/contacts';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Container from 'components/Container';\r\nimport ContactForm from 'components/ContactForm';\r\nimport ContactList from 'components/ContactList';\r\nimport Filter from 'components/Filter';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const pokemonApi = createApi({\n  reducerPath: 'pokemonApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://pokeapi.co/api/v2/' }),\n  endpoints: builder => ({\n    getPokemonByName: builder.query({\n      query: name => `pokemon/${name}`,\n    }),\n  }),\n});\n\nexport const { useGetPokemonByNameQuery } = pokemonApi;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts';\nimport { pokemonApi } from './pokemon';\nimport { contactApi } from './contacts/contactSlice';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    [pokemonApi.reducerPath]: pokemonApi.reducer,\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    pokemonApi.middleware,\n    contactApi.middleware,\n  ],\n  devtools: process.env.NODE_ENV === 'development',\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import Home from './pages/Home';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <Home /> */}\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}